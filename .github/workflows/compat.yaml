name: compatibility check
on: [push]
jobs:
  mingw:
    strategy:
      matrix:
        coin: [monero, wownero]
    runs-on: ubuntu-latest
    container:
      image: debian:bookworm
    steps:
      - name: Install dependencies
        run: |
          apt update
          apt install -y build-essential pkg-config autoconf libtool ccache make cmake gcc g++ git curl lbzip2 libtinfo5 gperf gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 gcc-mingw-w64-i686 g++-mingw-w64-i686
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Patch sources
        run: |
          git config --global --add safe.directory '*'
          git config --global user.email "ci@mrcyjanek.net"
          git config --global user.name "CI mrcyjanek.net"
          ./apply_patches.sh ${{ matrix.coin }}
      - name: ${{ matrix.coin }}/x86_64-w64-mingw32
        run: ./build_single.sh ${{ matrix.coin }} x86_64-w64-mingw32 -j$(nproc)
      - name: ${{ matrix.coin }}/i686-w64-mingw32
        run: ./build_single.sh ${{ matrix.coin }} i686-w64-mingw32 -j$(nproc)
      - name: rename artifacts
        run: |
          mkdir release/gh/
          for i in release/${{ matrix.coin }}/*
          do
              mv "$i" "release/gh/${{ matrix.coin }}_$(basename $i)"
          done
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: release/gh/*
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
  android:
    strategy:
      matrix:
        coin: [monero, wownero]
    runs-on: ubuntu-latest
    container:
      image: debian:bookworm
    steps:
      - name: Install dependencies
        run: |
          apt update
          apt install -y build-essential pkg-config autoconf libtool ccache make cmake gcc g++ git curl lbzip2 libtinfo5 gperf unzip python-is-python3
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Patch sources
        run: |
          git config --global --add safe.directory '*'
          git config --global user.email "ci@mrcyjanek.net"
          git config --global user.name "CI mrcyjanek.net"
          ./apply_patches.sh ${{ matrix.coin }}
      - name: ${{ matrix.coin }}/x86_64-linux-android
        run: ./build_single.sh ${{ matrix.coin }} x86_64-linux-android -j$(nproc)
      - name: ${{ matrix.coin }}/aarch64-linux-android
        run: ./build_single.sh ${{ matrix.coin }} aarch64-linux-android -j$(nproc)
      - name: ${{ matrix.coin }}/armv7a-linux-androideabi
        run: ./build_single.sh ${{ matrix.coin }} armv7a-linux-androideabi -j$(nproc)
      - name: rename artifacts
        run: |
          mkdir release/gh/
          for i in release/${{ matrix.coin }}/*
          do
              mv "$i" "release/gh/${{ matrix.coin }}_$(basename $i)"
          done
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: release/gh/*
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
  linux:
    strategy:
      matrix:
        coin: [monero, wownero]
    runs-on: ubuntu-latest
    container:
      image: debian:bookworm
    steps:
      - name: Install dependencies
        run: |
          apt update
          apt install -y build-essential pkg-config autoconf libtool ccache make cmake gcc g++ git curl lbzip2 libtinfo5 gperf gcc-aarch64-linux-gnu g++-aarch64-linux-gnu gcc-i686-linux-gnu g++-i686-linux-gnu
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Patch sources
        run: |
          git config --global --add safe.directory '*'
          git config --global user.email "ci@mrcyjanek.net"
          git config --global user.name "CI mrcyjanek.net"
          ./apply_patches.sh ${{ matrix.coin }}
      - name: ${{ matrix.coin }}/x86_64-linux-gnu
        run: ./build_single.sh ${{ matrix.coin }} x86_64-linux-gnu -j$(nproc)
      - name: ${{ matrix.coin }}/aarch64-linux-gnu
        run: ./build_single.sh ${{ matrix.coin }} aarch64-linux-gnu -j$(nproc)
      - name: ${{ matrix.coin }}/i686-linux-gnu
        run: ./build_single.sh ${{ matrix.coin }} i686-linux-gnu -j$(nproc)
      - name: rename artifacts
        run: |
          mkdir release/gh/
          for i in release/${{ matrix.coin }}/*
          do
              mv "$i" "release/gh/${{ matrix.coin }}_$(basename $i)"
          done
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: release/gh/*
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
  darwin:
    strategy:
      matrix:
        coin: [monero, wownero]
    runs-on: ubuntu-latest
    container:
      image: debian:bookworm
    steps:
      - name: Install dependencies
        run: |
          apt update
          apt install -y build-essential pkg-config autoconf libtool ccache make cmake gcc g++ git curl lbzip2 libtinfo5 gperf python-is-python3
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Patch sources
        run: |
          git config --global --add safe.directory '*'
          git config --global user.email "ci@mrcyjanek.net"
          git config --global user.name "CI mrcyjanek.net"
          ./apply_patches.sh monero
          ./apply_patches.sh wownero
      - name: ${{ matrix.coin }}/x86_64-apple-darwin11
        run: ./build_single.sh ${{ matrix.coin }} x86_64-apple-darwin11 -j$(nproc)
      - name: ${{ matrix.coin }}/aarch64-apple-darwin11
        run: ./build_single.sh ${{ matrix.coin }} aarch64-apple-darwin11 -j$(nproc)
      - name: rename artifacts
        run: |
          mkdir release/gh/
          for i in release/${{ matrix.coin }}/*
          do
              mv "$i" "release/gh/${{ matrix.coin }}_$(basename $i)"
          done
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: release/gh/*
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}